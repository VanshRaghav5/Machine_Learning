# -*- coding: utf-8 -*-
"""aircraft_fuel_comsumption_mini_project.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yTI2mVs68gzlPoOyaLMj1hnTTmLF952X
"""

import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression  #regression model
from sklearn.model_selection import train_test_split  #for splitting training testing data
from sklearn.metrics import r2_score,mean_squared_error   #for evaluation we call sklearn.metrics
import matplotlib.pyplot as plt
data=pd.read_csv("aircraft_fuel_consumption - aircraft_fuel_consumption.csv")
data

data.isnull().sum()

#Define features and target variables
x=data[["Flight_Distance","Aircraft_Type","Flight_Duration","Number_of_Passengers"]]
y=data["Fuel_Consumption"]

#converting categorical value aircraft_type to numerical
x=pd.get_dummies(x,columns=["Aircraft_Type"])
x.columns

#Split the data in training and testing model
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)

#initialize and train the model
model = LinearRegression()
model.fit(x_train, y_train)

#Make Prediction
y_pred = model.predict(x_test)
print(x_test)
print(y_pred)

#calculate MSE
mse=mean_squared_error(y_test,y_pred)
print(f"Mean Squared Error: {mse}")

#Calculate RMSE
rmse=np.sqrt(mse)
print(f"Root Mean Squared Error: {rmse}")

#Calculate r-squared
r2=r2_score(y_test,y_pred)
print(f"R-squared: {r2}")

#Converting model to binary field
import joblib
joblib.dump(model,"fuel_consumption_model.pkl")